{"remainingRequest":"/Users/connorcolombo/Documents/PKBACK/GitHub/CovidDashboard/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/connorcolombo/Documents/PKBACK/GitHub/CovidDashboard/src/views/Sandbox.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/connorcolombo/Documents/PKBACK/GitHub/CovidDashboard/src/views/Sandbox.vue","mtime":1587249250713},{"path":"/Users/connorcolombo/Documents/PKBACK/GitHub/CovidDashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/connorcolombo/Documents/PKBACK/GitHub/CovidDashboard/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/connorcolombo/Documents/PKBACK/GitHub/CovidDashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/connorcolombo/Documents/PKBACK/GitHub/CovidDashboard/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBWdWVNYXJrZG93biBmcm9tICd2dWUtbWFya2Rvd24nCmltcG9ydCBwcmV0dHlqc29uIGZyb20gJ3ByZXR0eWpzb24nCgppbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnCmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50JwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdTYW5kYm94JywKICBkYXRhKCl7CiAgICByZXR1cm4gewogICAgICBkYXRhOiB7fQogICAgfQogIH0sCiAgY29tcG9uZW50czogewogICAgVnVlTWFya2Rvd24KICB9LAogIG1ldGhvZHM6IHsKICAgIGFzeW5jIGxvYWQoKXsKICAgICAgdGhpcy5kYXRhPSBhd2FpdCBheGlvcy5nZXQoImh0dHBzOi8vY292aWR0cmFja2luZy5jb20vYXBpL3VzL2RhaWx5IikuZGF0YTsKCiAgICAgIHRoaXMuZGF0YS5mb3JFYWNoKCBkID0+IHsKICAgICAgICBjb25zdCBkYXRlID0gbW9tZW50KGQuZGF0ZSwgIllZWVlNTUREIikuZm9ybWF0KCJNTS9ERCIpOwogICAgICAgIGNvbnNvbGUubG9nKGRhdGUpOwogICAgICAgIGNvbnNvbGUubG9nKGQpOwogICAgICB9KTsKCiAgICAgIC8vIFtCUkVBS1BPSU5UIEhFUkVdCiAgICAgIGNvbnNvbGUubG9nKCJicmVhayIpOwogICAgfQogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIHByZXR0eURhdGEoKXsKICAgICAgcmV0dXJuIHByZXR0eWpzb24ucmVuZGVyKHRoaXMuZGF0YSk7CiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["Sandbox.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAqBA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Sandbox.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"sandbox\">\n    <h1> Console Sandbox </h1>\n    <p>\n      This is just a basic console sandbox. <br />\n      <vue-markdown>\n        All it does is load the latest data from the *Covid Tracking Project* and print it to the debug console. If you put a breakpoint after where it says `// [BREAKPOINT HERE]` (under `webpack://src/views/Sandbox.vue` in the source inspector), you can then play around with the data. You have access to `moment.js` if you need it.\n      </vue-markdown>\n      <br />\n      Happy scavenging!\n    </p>\n    <br />\n    <button @click=\"load()\">Load Data</button>\n    <br />\n    <div>\n     {{ prettyData }}\n    </div>\n  </div>\n</template>\n\n<script>\nimport VueMarkdown from 'vue-markdown'\nimport prettyjson from 'prettyjson'\n\nimport axios from 'axios'\nimport moment from 'moment'\n\nexport default {\n  name: 'Sandbox',\n  data(){\n    return {\n      data: {}\n    }\n  },\n  components: {\n    VueMarkdown\n  },\n  methods: {\n    async load(){\n      this.data= await axios.get(\"https://covidtracking.com/api/us/daily\").data;\n\n      this.data.forEach( d => {\n        const date = moment(d.date, \"YYYYMMDD\").format(\"MM/DD\");\n        console.log(date);\n        console.log(d);\n      });\n\n      // [BREAKPOINT HERE]\n      console.log(\"break\");\n    }\n  },\n  computed: {\n    prettyData(){\n      return prettyjson.render(this.data);\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped lang=\"scss\">\n  p {\n    text-align: left;\n    margin: 1rem 2rem;\n  }\n</style>\n"]}]}
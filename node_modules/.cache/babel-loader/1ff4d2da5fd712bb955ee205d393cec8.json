{"remainingRequest":"/Users/connorcolombo/Documents/PKBACK/GitHub/CovidDashboard/node_modules/babel-loader/lib/index.js!/Users/connorcolombo/Documents/PKBACK/GitHub/CovidDashboard/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/connorcolombo/Documents/PKBACK/GitHub/CovidDashboard/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/connorcolombo/Documents/PKBACK/GitHub/CovidDashboard/src/views/Sandbox.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/connorcolombo/Documents/PKBACK/GitHub/CovidDashboard/src/views/Sandbox.vue","mtime":1587263522547},{"path":"/Users/connorcolombo/Documents/PKBACK/GitHub/CovidDashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/connorcolombo/Documents/PKBACK/GitHub/CovidDashboard/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/connorcolombo/Documents/PKBACK/GitHub/CovidDashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/connorcolombo/Documents/PKBACK/GitHub/CovidDashboard/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL1VzZXJzL2Nvbm5vcmNvbG9tYm8vRG9jdW1lbnRzL1BLQkFDSy9HaXRIdWIvQ292aWREYXNoYm9hcmQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgVnVlTWFya2Rvd24gZnJvbSAndnVlLW1hcmtkb3duJzsKaW1wb3J0IHByZXR0eWpzb24gZnJvbSAncHJldHR5anNvbic7CmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50JzsKaW1wb3J0IE5vdmVsQ292aWQgZnJvbSAnbm92ZWxjb3ZpZCc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnU2FuZGJveCcsCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHRyYWNrOiBuZXcgTm92ZWxDb3ZpZCgpLAogICAgICBkYXRhOiB7fSwKICAgICAgLy8gQWxsb3cgbW9kdWxlcyB0byBiZSBhY2Nlc3NlZCB0aHJvdWdoICd0aGlzJzoKICAgICAgYXhpb3M6IGF4aW9zLAogICAgICBtb21lbnQ6IG1vbWVudCwKICAgICAgTm92ZWxDb3ZpZDogTm92ZWxDb3ZpZAogICAgfTsKICB9LAogIGNvbXBvbmVudHM6IHsKICAgIFZ1ZU1hcmtkb3duOiBWdWVNYXJrZG93bgogIH0sCiAgbWV0aG9kczogewogICAgbG9hZDogZnVuY3Rpb24gbG9hZCgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgdmFyIHNlbGYsIF95aWVsZCRheGlvcyRnZXQsIGRhdGE7CgogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIHNlbGYgPSBfdGhpczsgLy8gQWxsICd0aGlzJyB0byBiZSBhY2Nlc3NlZCBpbiBjb25zb2xlCgogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDM7CiAgICAgICAgICAgICAgICByZXR1cm4gYXhpb3MuZ2V0KCJodHRwczovL2NvdmlkdHJhY2tpbmcuY29tL2FwaS91cy9kYWlseSIpOwoKICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgICBfeWllbGQkYXhpb3MkZ2V0ID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICAgIGRhdGEgPSBfeWllbGQkYXhpb3MkZ2V0LmRhdGE7CiAgICAgICAgICAgICAgICBfdGhpcy5kYXRhID0gZGF0YTsKCiAgICAgICAgICAgICAgICBfdGhpcy5kYXRhLmZvckVhY2goZnVuY3Rpb24gKGQpIHsKICAgICAgICAgICAgICAgICAgdmFyIGRhdGUgPSBtb21lbnQoZC5kYXRlLCAiWVlZWU1NREQiKS5mb3JtYXQoIk1NL0REIik7CiAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGRhdGUpOwogICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhkKTsKICAgICAgICAgICAgICAgIH0pOyAvLyBbQlJFQUtQT0lOVCBIRVJFXQoKCiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygiYnJlYWsiKTsKCiAgICAgICAgICAgICAgY2FzZSA4OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgIH0pKSgpOwogICAgfQogIH0sCiAgY29tcHV0ZWQ6IHt9Cn07"},{"version":3,"sources":["Sandbox.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAqBA,OAAA,WAAA,MAAA,cAAA;AACA,OAAA,UAAA,MAAA,YAAA;AAEA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,MAAA,MAAA,QAAA;AAEA,OAAA,UAAA,MAAA,YAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,SADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,KAAA,EAAA,IAAA,UAAA,EADA;AAEA,MAAA,IAAA,EAAA,EAFA;AAGA;AACA,MAAA,KAAA,EAAA,KAJA;AAKA,MAAA,MAAA,EAAA,MALA;AAMA,MAAA,UAAA,EAAA;AANA,KAAA;AAQA,GAXA;AAYA,EAAA,UAAA,EAAA;AACA,IAAA,WAAA,EAAA;AADA,GAZA;AAeA,EAAA,OAAA,EAAA;AACA,IAAA,IADA,kBACA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,IADA,GACA,KADA,EACA;;AADA;AAAA,uBAEA,KAAA,CAAA,GAAA,CAAA,wCAAA,CAFA;;AAAA;AAAA;AAEA,gBAAA,IAFA,oBAEA,IAFA;AAIA,gBAAA,KAAA,CAAA,IAAA,GAAA,IAAA;;AACA,gBAAA,KAAA,CAAA,IAAA,CAAA,OAAA,CAAA,UAAA,CAAA,EAAA;AACA,sBAAA,IAAA,GAAA,MAAA,CAAA,CAAA,CAAA,IAAA,EAAA,UAAA,CAAA,CAAA,MAAA,CAAA,OAAA,CAAA;AACA,kBAAA,OAAA,CAAA,GAAA,CAAA,IAAA;AACA,kBAAA,OAAA,CAAA,GAAA,CAAA,CAAA;AACA,iBAJA,EALA,CAWA;;;AACA,gBAAA,OAAA,CAAA,GAAA,CAAA,OAAA;;AAZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AAdA,GAfA;AA+BA,EAAA,QAAA,EAAA;AA/BA,CAAA","sourcesContent":["<template>\n  <div class=\"sandbox\">\n    <h1> Console Sandbox </h1>\n    <p>\n      This is just a basic console sandbox. <br />\n      <vue-markdown>\n        All it does is load the latest data from the *Covid Tracking Project* and print it to the debug console. If you put a breakpoint after where it says `// [BREAKPOINT HERE]` (under `webpack://src/views/Sandbox.vue` in the source inspector), you can then play around with the data. You have access to `axios`, `moment.js`, and the fantastic `NovelCovid` module in the `self` object if you need it. Note: a `NovelCovid` instance is available as `self.track` in the console.)\n      </vue-markdown>\n      <br />\n      Happy scavenging!\n    </p>\n    <br />\n    <button @click=\"load()\">Load Data</button>\n    <br />\n    <div v-if=\"Object.keys(data).length > 0\">\n     {{ data }}\n    </div>\n  </div>\n</template>\n\n<script>\nimport VueMarkdown from 'vue-markdown'\nimport prettyjson from 'prettyjson'\n\nimport axios from 'axios'\nimport moment from 'moment'\n\nimport NovelCovid from 'novelcovid'\n\nexport default {\n  name: 'Sandbox',\n  data(){\n    return {\n      track: new NovelCovid(),\n      data: {},\n      // Allow modules to be accessed through 'this':\n      axios,\n      moment,\n      NovelCovid\n    }\n  },\n  components: {\n    VueMarkdown\n  },\n  methods: {\n    async load(){\n      const self = this; // All 'this' to be accessed in console\n      const { data } = await axios.get(\"https://covidtracking.com/api/us/daily\");\n\n      this.data = data;\n      this.data.forEach( d => {\n        const date = moment(d.date, \"YYYYMMDD\").format(\"MM/DD\");\n        console.log(date);\n        console.log(d);\n      });\n\n      // [BREAKPOINT HERE]\n      console.log(\"break\");\n    }\n  },\n  computed: {\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped lang=\"scss\">\n  p {\n    text-align: left;\n    margin: 1rem 2rem;\n  }\n</style>\n"],"sourceRoot":"src/views"}]}
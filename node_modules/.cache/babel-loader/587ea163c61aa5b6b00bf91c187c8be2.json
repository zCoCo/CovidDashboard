{"remainingRequest":"/Users/connorcolombo/Documents/PKBACK/GitHub/CovidDashboard/node_modules/babel-loader/lib/index.js!/Users/connorcolombo/Documents/PKBACK/GitHub/CovidDashboard/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/connorcolombo/Documents/PKBACK/GitHub/CovidDashboard/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/connorcolombo/Documents/PKBACK/GitHub/CovidDashboard/src/components/Map.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/connorcolombo/Documents/PKBACK/GitHub/CovidDashboard/src/components/Map.vue","mtime":1587331007948},{"path":"/Users/connorcolombo/Documents/PKBACK/GitHub/CovidDashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/connorcolombo/Documents/PKBACK/GitHub/CovidDashboard/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/connorcolombo/Documents/PKBACK/GitHub/CovidDashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/connorcolombo/Documents/PKBACK/GitHub/CovidDashboard/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL1VzZXJzL2Nvbm5vcmNvbG9tYm8vRG9jdW1lbnRzL1BLQkFDSy9HaXRIdWIvQ292aWREYXNoYm9hcmQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgeyBMTWFwIH0gZnJvbSAndnVlMi1sZWFmbGV0JzsKaW1wb3J0IHsgSW5mb0NvbnRyb2wsIFJlZmVyZW5jZUNoYXJ0LCBDaG9yb3BsZXRoTGF5ZXIgfSBmcm9tICd2dWUtY2hvcm9wbGV0aCc7IC8vIExvYWQgTWFwIERhdGE6Ci8vIEdlb0pTT04gTWFwIE91dGxpbmVzIGF0IHZhcnlpbmcgcmVzb2x1dGlvbnM6CgppbXBvcnQgKiBhcyBvdXRsaW5lX3N0YXRlcyBmcm9tICdAL2RhdGEvZ2VvL3VzX3N0YXRlc18yMG0uanMnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ01hcCcsCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIG91dGxpbmVzOiB7CiAgICAgICAgVVM6IG91dGxpbmVfc3RhdGVzLAogICAgICAgIHN0YXRlczogb3V0bGluZV9zdGF0ZXMsCiAgICAgICAgY291bnRpZXM6IG91dGxpbmVfc3RhdGVzLAogICAgICAgIGNvbmdyZXNzOiBvdXRsaW5lX3N0YXRlcwogICAgICB9CiAgICB9OwogIH0sCiAgY29tcG9uZW50czogewogICAgJ2wtbWFwJzogTE1hcCwKICAgICdsLWluZm8tY29udHJvbCc6IEluZm9Db250cm9sLAogICAgJ2wtcmVmZXJlbmNlLWNoYXJ0JzogUmVmZXJlbmNlQ2hhcnQsCiAgICAnbC1jaG9yb3BsZXRoLWxheWVyJzogQ2hvcm9wbGV0aExheWVyCiAgfSwKICBtZXRob2RzOiB7CiAgICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIC8vIFByZWxvYWQgR2VvSlNPTiBEYXRhOgogICAgICAgICAgICAgICAgY29uc29sZS5sb2coIkxvYWRpbmcgbWFwIG91dGxpbmUgZGF0YSAuIC4gLiIpOwoKICAgICAgICAgICAgICBjYXNlIDE6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlKTsKICAgICAgfSkpKCk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["Map.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA,SAAA,IAAA,QAAA,cAAA;AACA,SAAA,WAAA,EAAA,cAAA,EAAA,eAAA,QAAA,gBAAA,C,CAEA;AACA;;AACA,OAAA,KAAA,cAAA,MAAA,6BAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,KADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,QAAA,EAAA;AACA,QAAA,EAAA,EAAA,cADA;AAEA,QAAA,MAAA,EAAA,cAFA;AAGA,QAAA,QAAA,EAAA,cAHA;AAIA,QAAA,QAAA,EAAA;AAJA;AADA,KAAA;AAQA,GAXA;AAYA,EAAA,UAAA,EAAA;AACA,aAAA,IADA;AAEA,sBAAA,WAFA;AAGA,yBAAA,cAHA;AAIA,0BAAA;AAJA,GAZA;AAkBA,EAAA,OAAA,EAAA;AACA,IAAA,OADA,qBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA,gBAAA,OAAA,CAAA,GAAA,CAAA,gCAAA;;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAJA;AAlBA,CAAA","sourcesContent":["<template>\n  <div class=\"map\">\n    <l-map\n      :center=\"[39.8283, 98.5795] /* Geographic Center of the US */ \"\n      :zoom=\"6\"\n      style=\"height: 500px;\"\n      :options=\"mapOptions\">\n        <l-choropleth-layer\n          :data=\"pyDepartmentsData\"\n          titleKey=\"department_name\"\n          idKey=\"department_id\"\n          :value=\"value\"\n          :extraValues=\"extraValues\"\n          geojsonIdKey=\"dpto\"\n          :geojson=\"paraguayGeojson\"\n          :colorScale=\"colorScale\">\n            <template slot-scope=\"props\">\n              <l-info-control\n                :item=\"props.currentItem\"\n                :unit=\"props.unit\"\n                title=\"Department\"\n                placeholder=\"Hover over a region\"/>\n              <l-reference-chart\n                title=\"Girls school enrolment\"\n                :colorScale=\"colorScale\"\n                :min=\"props.min\"\n                :max=\"props.max\"\n                position=\"topright\"/>\n            </template>\n        </l-choropleth-layer>\n    </l-map>\n  </div>\n</template>\n\n<script>\nimport { LMap } from 'vue2-leaflet'\nimport { InfoControl, ReferenceChart, ChoroplethLayer } from 'vue-choropleth'\n\n// Load Map Data:\n// GeoJSON Map Outlines at varying resolutions:\nimport * as outline_states from '@/data/geo/us_states_20m.js'\n\nexport default {\n  name: 'Map',\n  data(){\n    return {\n      outlines: {\n        US: outline_states,\n        states: outline_states,\n        counties: outline_states,\n        congress: outline_states\n      }\n    }\n  },\n  components: {\n    'l-map': LMap,\n    'l-info-control': InfoControl,\n    'l-reference-chart': ReferenceChart,\n    'l-choropleth-layer': ChoroplethLayer\n  },\n  methods: {\n    async mounted(){\n      // Preload GeoJSON Data:\n      console.log(\"Loading map outline data . . .\");\n    }\n  }\n}\n</script>\n\n<style scoped lang=\"scss\">\n  @import \"~leaflet/dist/leaflet.css\";\n\n</style>\n"],"sourceRoot":"src/components"}]}
{"remainingRequest":"/Users/connorcolombo/Documents/PKBACK/GitHub/CovidDashboard/node_modules/babel-loader/lib/index.js!/Users/connorcolombo/Documents/PKBACK/GitHub/CovidDashboard/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/connorcolombo/Documents/PKBACK/GitHub/CovidDashboard/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/connorcolombo/Documents/PKBACK/GitHub/CovidDashboard/src/views/Sandbox.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/connorcolombo/Documents/PKBACK/GitHub/CovidDashboard/src/views/Sandbox.vue","mtime":1587249250713},{"path":"/Users/connorcolombo/Documents/PKBACK/GitHub/CovidDashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/connorcolombo/Documents/PKBACK/GitHub/CovidDashboard/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/connorcolombo/Documents/PKBACK/GitHub/CovidDashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/connorcolombo/Documents/PKBACK/GitHub/CovidDashboard/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL1VzZXJzL2Nvbm5vcmNvbG9tYm8vRG9jdW1lbnRzL1BLQkFDSy9HaXRIdWIvQ292aWREYXNoYm9hcmQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgVnVlTWFya2Rvd24gZnJvbSAndnVlLW1hcmtkb3duJzsKaW1wb3J0IHByZXR0eWpzb24gZnJvbSAncHJldHR5anNvbic7CmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50JzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdTYW5kYm94JywKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgZGF0YToge30KICAgIH07CiAgfSwKICBjb21wb25lbnRzOiB7CiAgICBWdWVNYXJrZG93bjogVnVlTWFya2Rvd24KICB9LAogIG1ldGhvZHM6IHsKICAgIGxvYWQ6IGZ1bmN0aW9uIGxvYWQoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAyOwogICAgICAgICAgICAgICAgcmV0dXJuIGF4aW9zLmdldCgiaHR0cHM6Ly9jb3ZpZHRyYWNraW5nLmNvbS9hcGkvdXMvZGFpbHkiKS5kYXRhOwoKICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICBfdGhpcy5kYXRhID0gX2NvbnRleHQuc2VudDsKCiAgICAgICAgICAgICAgICBfdGhpcy5kYXRhLmZvckVhY2goZnVuY3Rpb24gKGQpIHsKICAgICAgICAgICAgICAgICAgdmFyIGRhdGUgPSBtb21lbnQoZC5kYXRlLCAiWVlZWU1NREQiKS5mb3JtYXQoIk1NL0REIik7CiAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGRhdGUpOwogICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhkKTsKICAgICAgICAgICAgICAgIH0pOyAvLyBbQlJFQUtQT0lOVCBIRVJFXQoKCiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygiYnJlYWsiKTsKCiAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgIH0pKSgpOwogICAgfQogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIHByZXR0eURhdGE6IGZ1bmN0aW9uIHByZXR0eURhdGEoKSB7CiAgICAgIHJldHVybiBwcmV0dHlqc29uLnJlbmRlcih0aGlzLmRhdGEpOwogICAgfQogIH0KfTs="},{"version":3,"sources":["Sandbox.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAqBA,OAAA,WAAA,MAAA,cAAA;AACA,OAAA,UAAA,MAAA,YAAA;AAEA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,MAAA,MAAA,QAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,SADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,IAAA,EAAA;AADA,KAAA;AAGA,GANA;AAOA,EAAA,UAAA,EAAA;AACA,IAAA,WAAA,EAAA;AADA,GAPA;AAUA,EAAA,OAAA,EAAA;AACA,IAAA,IADA,kBACA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACA,KAAA,CAAA,GAAA,CAAA,wCAAA,EAAA,IADA;;AAAA;AACA,gBAAA,KAAA,CAAA,IADA;;AAGA,gBAAA,KAAA,CAAA,IAAA,CAAA,OAAA,CAAA,UAAA,CAAA,EAAA;AACA,sBAAA,IAAA,GAAA,MAAA,CAAA,CAAA,CAAA,IAAA,EAAA,UAAA,CAAA,CAAA,MAAA,CAAA,OAAA,CAAA;AACA,kBAAA,OAAA,CAAA,GAAA,CAAA,IAAA;AACA,kBAAA,OAAA,CAAA,GAAA,CAAA,CAAA;AACA,iBAJA,EAHA,CASA;;;AACA,gBAAA,OAAA,CAAA,GAAA,CAAA,OAAA;;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAZA,GAVA;AAwBA,EAAA,QAAA,EAAA;AACA,IAAA,UADA,wBACA;AACA,aAAA,UAAA,CAAA,MAAA,CAAA,KAAA,IAAA,CAAA;AACA;AAHA;AAxBA,CAAA","sourcesContent":["<template>\n  <div class=\"sandbox\">\n    <h1> Console Sandbox </h1>\n    <p>\n      This is just a basic console sandbox. <br />\n      <vue-markdown>\n        All it does is load the latest data from the *Covid Tracking Project* and print it to the debug console. If you put a breakpoint after where it says `// [BREAKPOINT HERE]` (under `webpack://src/views/Sandbox.vue` in the source inspector), you can then play around with the data. You have access to `moment.js` if you need it.\n      </vue-markdown>\n      <br />\n      Happy scavenging!\n    </p>\n    <br />\n    <button @click=\"load()\">Load Data</button>\n    <br />\n    <div>\n     {{ prettyData }}\n    </div>\n  </div>\n</template>\n\n<script>\nimport VueMarkdown from 'vue-markdown'\nimport prettyjson from 'prettyjson'\n\nimport axios from 'axios'\nimport moment from 'moment'\n\nexport default {\n  name: 'Sandbox',\n  data(){\n    return {\n      data: {}\n    }\n  },\n  components: {\n    VueMarkdown\n  },\n  methods: {\n    async load(){\n      this.data= await axios.get(\"https://covidtracking.com/api/us/daily\").data;\n\n      this.data.forEach( d => {\n        const date = moment(d.date, \"YYYYMMDD\").format(\"MM/DD\");\n        console.log(date);\n        console.log(d);\n      });\n\n      // [BREAKPOINT HERE]\n      console.log(\"break\");\n    }\n  },\n  computed: {\n    prettyData(){\n      return prettyjson.render(this.data);\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped lang=\"scss\">\n  p {\n    text-align: left;\n    margin: 1rem 2rem;\n  }\n</style>\n"],"sourceRoot":"src/views"}]}